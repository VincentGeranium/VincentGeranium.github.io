---
layout: post
title:  "UIKit 프레임워크에 대한 간략한 정리"
date:   2019-06-04
categories: Swift, iOS
---

### 참고 자료

이 포스트는 edwith의 부스트코스 iOS 강좌를 듣고 정리된 내용을 참고하여 쓴 포스트임을 미리 밝힙니다

[edwith 부스트코스 iOS](https://www.edwith.org/boostcourse-ios/lecture/17995/)

---

# UIKit Framework

- UIKit은 iOS 애플리케이션 개발시 사용자에게 보여질 화면을 구성

- UIKit은 사용자 액션에 대응에 관련된 다양한 요소를 포함

---

# UIKit Framework Introduce

- **UIKit은 iOS 애플리케이션의 사용자 인터페이스를 구현하고 이벤트를 관리하는 프레임워크**

- UIKit 프레임워크는 **제스처 처리, 애니메이션, 그림 그리기, 이미지 처리, 텍스트 처리 등 사용자 이벤트 처리를 위한 클래스를 포함**

- **테이블 뷰, 슬라이더, 버튼, 텍스트 필드, 얼럿 창 등 애플리케이션의 화면을 구성하는 요소를 포함**

- UIKit 클래스 중 UIResponder에서 파생된 클래스나 사용자 인터페이스에 관련된 클래스는 애플리케이션의 메인 스레드 (혹은 메인 디스패치 큐)에서만 사용

- UIKit은 iOS 와 tvOS 플랫폼에서 사용

---

# UIKit의 기능별 요소

**사용자 인터페이스**

- view and Control: 화면에 콘텐츠 표시

- View Controller : 사용자 인터페이스 관리

- Animation and Haptics : 애니메이션과 햅틱을 통한 피드백 제공

- Window and Screen : 뷰 계층을 위한 윈도우 제공

**사용자 액션**

- Touch, Press, Gesture : 제스처 인식기를 통한 이벤트 처리 로직

- Drag and Drop : 화면 위에 드래그 앤 드롭 기능

- Peek and Pop : 3D 터치에 대응한 미리 보기 기능

- Keyboard and Menu : 키보드 입력을 처리 및 사용자 정의 메뉴 표시

